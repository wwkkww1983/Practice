@{
    Layout = "~/Views/Shared/_Index.cshtml";
}
<div class="container-div">
    <div class="row">
        <div id="searchDiv" class="col-sm-12 search-collapse">
            <div class="select-list">
                <ul>
                    <li>
                        控制名称：<input id="paramenterName" col="ParamenterName" type="text" />
                    </li>
                    <li class="select-select2">
                        <label>所属模块：</label>
                        <div id="viewControlModelId" col="ViewControlModelId" class="select"></div>
                    </li>
                    <li>
                        <a id="btnSearch" class="btn btn-primary btn-sm" onclick="searchGrid()"><i class="fa fa-search"></i>&nbsp;搜索</a>
                    </li>
                </ul>
            </div>
        </div>
        <div class="btn-group-sm hidden-xs" id="toolbar">
            <a id="btnAdd" class="btn btn-success" onclick="showSaveForm(true)"><i class="fa fa-plus"></i> 新增</a>
            <a id="btnEdit" class="btn btn-primary disabled" onclick="showSaveForm(false)"><i class="fa fa-edit"></i> 修改</a>
            <a id="btnDelete" class="btn btn-danger disabled" onclick="deleteForm()"><i class="fa fa-remove"></i> 删除</a>
        </div>
        <div class="col-sm-12 select-table table-striped">
            <table id="gridTable" data-mobile-responsive="true"></table>
        </div>
    </div>
</div>

<script type="text/javascript">
    $(function () {
        initGrid();

            $("#viewControlModelId").ysComboBox({
                url: '@Url.Content("~/ApplicationManage/ViewControlModel/GetListJson")',
                key: "Id",
                value: "ControlName",
                class: "form-control",
            });
    });

    function initGrid() {
        var queryUrl = '@Url.Content("~/ApplicationManage/ViewParamenter/GetPageListJson")';
        $('#gridTable').ysTable({
            url: queryUrl,
            sortName: 'ParamenterSort',
            sortOrder: 'Asc',
            columns: [
                { checkbox: true, visible: true },
                { field: 'Id', title: 'Id', visible: false },
                { field: 'ControlName', title: '控制模块' },
                { field: 'ParamenterName', title: '控制名称' },
                { field: 'ParamenterUnit', title: '控制单位',
                    formatter: function (value, item, index) {
                        if (item.ParamenterUnit == "@ViewParamenterEnum.Single.ParseToInt()") {
                            return '<span class="label label-success">@ViewParamenterEnum.Single.GetDescription()</span>';
                        }
                        else if (item.ParamenterUnit == "@ViewParamenterEnum.Both.ParseToInt()") {
                            return '<span class="label label-primary">@ViewParamenterEnum.Both.GetDescription()</span>';
                        }
                    }
                },
                { field: 'ParamenterStatus', title: '状态' ,
                    formatter: function (value, row, index) {
                        if (row.ParamenterStatus == "@StatusEnum.Yes.ParseToInt()") {
                            return '<span class="badge badge-primary">' + "@StatusEnum.Yes.GetDescription()" + '</span>';
                        } else {
                            return '<span class="badge badge-warning">' + "@StatusEnum.No.GetDescription()" + '</span>';
                        }
                    }
                },
                { field: 'ParamenterIp', title: 'IP' },
           {
                field: 'ParamenterValueType', title: '数据类型', formatter: function (value, row, index) {
                               if (row.ParamenterValueType == "@InstructEnum1.SHORT.ParseToInt()") {
                                   return '<span class="badge badge-primary">' + "@InstructEnum1.SHORT.GetDescription()" + '</span>';
                               } else if (row.ParamenterValueType == "@InstructEnum1.UINT32.ParseToInt()") {
                            return '<span class="badge badge-secondary">' + "@InstructEnum1.UINT32.GetDescription()" + '</span>';
                               } else if (row.ParamenterValueType == "@InstructEnum1.USHORT.ParseToInt()") {
                            return '<span class="badge badge-success">' + "@InstructEnum1.USHORT.GetDescription()" + '</span>';
                               } else if (row.ParamenterValueType == "@InstructEnum1.INT.ParseToInt()") {
                            return '<span class="badge badge-danger">' + "@InstructEnum1.INT.GetDescription()" + '</span>';
                               } else if (row.ParamenterValueType == "@InstructEnum1.FLOAT.ParseToInt()") {
                            return '<span class="badge badge-warning">' + "@InstructEnum1.FLOAT.GetDescription()" + '</span>';
                        }
                    }
                },
                { field: 'ParamenterValue', title: '值' },
                { field: 'ParamenterPort', title: '端口' },
                { field: 'ParamenterSort', title: '排序' }
            ],
            queryParams: function (params) {
                var pagination = $('#gridTable').ysTable('getPagination', params);
                var queryString = $('#searchDiv').getWebControls(pagination);
                return queryString;
            }
        });
    }
    function searchGrid() {
        $('#gridTable').ysTable('search');
        resetToolbarStatus();
    }

    function showSaveForm(bAdd) {
        var id = 0;
        if (!bAdd) {
            var selectedRow = $("#gridTable").bootstrapTable("getSelections");
            if (!ys.checkRowEdit(selectedRow)) {
                return;
            }
            else {
                id = selectedRow[0].Id;
            }
        }
        ys.openDialog({
            title: id > 0 ? "编辑控制" : "添加控制",
            content: '@Url.Content("~/ApplicationManage/ViewParamenter/ViewParamenterForm")' + '?id=' + id,
            width: "768px",
            height: "600px",
            callback: function (index, layero) {
                var iframeWin = window[layero.find('iframe')[0]['name']];
                iframeWin.saveForm(index);
            }
        });
    }

    function deleteForm() {
        var selectedRow = $("#gridTable").bootstrapTable("getSelections");
        if (ys.checkRowDelete(selectedRow)) {
            ys.confirm("确认要删除选中的" + selectedRow.length + "条数据吗？", function () {
                var ids = ys.getIds(selectedRow);
                ys.ajax({
                    url: '@Url.Content("~/ApplicationManage/ViewParamenter/DeleteFormJson")' + '?ids=' + ids,
                    type: "post",
                    success: function (obj) {
                        if (obj.Tag == 1) {
                            ys.msgSuccess(obj.Message);
                            searchGrid();
                        }
                        else {
                            ys.msgError(obj.Message);
                        }
                    }
                });
            });
        }
    }
</script>

